//
//	GarbageCollector.cpp
//	Balea Engine
//
//	Created by Diego Revilla on 10/12/21
//	Copyright © 2021 Digipen. All Rights reserved
//

#include <Shared.h>

namespace BaleaEngine {
	namespace {
		static stl::PageAllocator<GameObject> s_objalloc;
	}

	// ------------------------------------------------------------------------
	/*! GO Garbage Collection
	*
	*   Collects the Garbage generated by the Game Object System
	*/ //--------------------------------------------------------------------
	STATIC GCollector::GOGarbageCollection() {

		static stl::PageAllocator<Component> compalloc;

		stl::FForEach(mToRemoveComps.begin(), mToRemoveComps.end(), [](Component*& x) {
			x->Destroy();
			x->GetOwner()->mComponents.remove(x);
			compalloc.destroy(x);
			compalloc.deallocate(x);
			});

		stl::FForEach(mToRemoveChilds.begin(), mToRemoveChilds.end(), [](GameObject*& x) {
			x->Destroy();
			x->GetParent()->mChilds.remove(x);
			s_objalloc.destroy(x);
			s_objalloc.deallocate(x);
			});

		stl::FForEach(mToRemoveObjs.begin(), mToRemoveObjs.end(), [](GameObject*& x) {
			x->Destroy();
			auto& temp_ = Editor->GetCurrentScene()->mObjectList;
			Editor->GetCurrentScene()->mObjectList.remove(x);
			s_objalloc.destroy(x);
			s_objalloc.deallocate(x);
			});

		mToRemoveComps.clear();
		mToRemoveChilds.clear();
		mToRemoveObjs.clear();
	}

	// ------------------------------------------------------------------------
	/*! Add Component To Remove
	*
	*   Removes a Component
	*/ //--------------------------------------------------------------------
	STATIC GCollector::AddComponentToRemove(Component* comp) {
		mToRemoveComps.push_back(comp);
	}

	// ------------------------------------------------------------------------
	/*! Add Child to Remove
	*
	*   Removes a Child
	*/ //--------------------------------------------------------------------
	STATIC GCollector::AddChildToRemove(GameObject* child) {
		mToRemoveObjs.push_back(child);
	}

	// ------------------------------------------------------------------------
	/*! Add Object To Remove
	*
	*   Removes an object
	*/ //--------------------------------------------------------------------
	STATIC GCollector::AddObjectToRemove(GameObject* obj) {
		mToRemoveObjs.push_back(obj);
	}
}